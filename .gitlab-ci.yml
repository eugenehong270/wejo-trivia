stages:
  - test
  - build
  - deploy

services:
  - postgres:14.2-bullseye


variables:
  POSTGRES_PASSWORD: trivia
  DATABASE_URL: postgres://trivia_gbmj_user:0ltswBErYkmq0LmcfkQKpGBR775jJEqG@dpg-ce8gqgcgqg46a85fv88g-a/trivia_gbmj

fast_api-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd fast_api
    - pip install -r requirements.txt
    - python -m pytest

# Run flake8 to check for code quality
lint-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 fast_api

# Build the React/JavaScript front-end
build-front-end-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: node:lts-bullseye
  needs:
    - fast_api-unit-test-job
    - lint-test-job
  variables:
    PUBLIC_URL: https://wejo-games.gitlab.io/module3-project-gamma
    REACT_APP_FAST_API: https://wejo-games.onrender.com
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

build-back-end-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd fast_api
    - docker build -t ${CI_REGISTRY_IMAGE}/fast_api:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/fast_api:latest ${CI_REGISTRY_IMAGE}/fast_api:$CI_JOB_ID

    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

    - docker push ${CI_REGISTRY_IMAGE}/fast_api:$CI_JOB_ID
    - docker push ${CI_REGISTRY_IMAGE}/fast_api:latest

pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    - mv ghi/build/ public
  artifacts:
    paths:
      - public
